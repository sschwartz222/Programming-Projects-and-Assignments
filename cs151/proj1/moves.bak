#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 9 #"Consolas\0"
0 10 91 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 10 91 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 1857 0 29 3 18 #"#lang typed/racket"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";; CMSC15100 Winter 2018"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";; Project 1 -- moves.rkt"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; Sam Schwartz"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";; Game logic"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";; include CS151-specific definitions"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"../include/cs151-core.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";; include testing framework"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 30 #"typed/test-engine/racket-tests"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";; include board.rkt"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"board.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";; A game state is a Board and a next player"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"Game"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  (["
0 0 14 3 5 #"board"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Board"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ["
0 0 14 3 4 #"next"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Player"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 13 #"initial-board"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"Natural"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 5 #"Board"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 70
(
 #";; create an initial board of the given size, which should be even a"
 #"nd"
) 0 0 25 29 1 #"\n"
0 0 17 3 63
#";; between 6 and 16, and four pieces (two of each color) in the"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";; center.  Signal an error if the width is invalid"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"initial-board"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"even?"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"board-update"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 12 #"board-update"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 12 #"board-update"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 12 #"board-update"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-board"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 5 #"Coord"
0 0 25 3 2 #" ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 5 #"Coord"
0 0 25 3 2 #" ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #")) ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 5 #"Coord"
0 0 25 3 2 #" ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"Coord"
0 0 25 3 2 #" ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 8 #"truncate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 49 #"\"expects an even natural number between 6 and 16\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"initial-board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 3 #") ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                             "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                             "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"Natural"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 4 #"Game"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";; make a game in its initial state with the specified board width"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"Game"
0 0 25 3 2 #" ("
0 0 14 3 13 #"initial-board"
0 0 25 3 1 #" "
0 0 14 3 3 #"nat"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-game"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"Game"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";; A move is a player and a position on the board"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"Move"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  (["
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Player"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ["
0 0 14 3 5 #"coord"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 10 #"outflanks?"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 71
(
 #";; determines if a piece outflanks one or more of the opponent's pie"
 #"ces"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"outflanks?"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    {("
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 13 #"outflank-help"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 2 #") "
0 0 14 3 2 #"->"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 17 3 23 #";; helper for outflanks"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 1 #" "
0 0 14 3 3 #"dir"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         [("
0 0 14 3 9 #"boolean=?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"()]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         [("
0 0 14 3 8 #"symbol=?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"Move-player"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #")) "
0 0 14 3 4 #"list"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         [("
0 0 14 3 8 #"symbol=?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"_"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"()]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 1 #" "
0 0 14 3 3 #"dir"
0 0 25 3 1 #" "
0 0 14 3 3 #"dir"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 2 #") "
0 0 14 3 4 #"list"
0 0 25 3 6 #"))]))}"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 6 #"()))) "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"outflanks?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"outflanks?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"outflanks?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"outflanks?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"flips"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #";; given a board and a move, returns the list of coordinates of cell"
 #"s"
) 0 0 25 29 1 #"\n"
0 0 17 3 49 #";; containing pieces to flip if that move is made"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"flips"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    {("
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 13 #"outflank-help"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 2 #") "
0 0 14 3 2 #"->"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 17 3 23 #";; helper for outflanks"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 1 #" "
0 0 14 3 3 #"dir"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         [("
0 0 14 3 9 #"boolean=?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"()]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         [("
0 0 14 3 8 #"symbol=?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"Move-player"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #")) "
0 0 14 3 4 #"list"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         [("
0 0 14 3 8 #"symbol=?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"_"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"()]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 1 #" "
0 0 14 3 3 #"dir"
0 0 25 3 1 #" "
0 0 14 3 3 #"dir"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 6 #"coord+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Move-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 14 3 3 #"dir"
0 0 25 3 2 #") "
0 0 14 3 4 #"list"
0 0 25 3 6 #"))]))}"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 13 #"outflank-help"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 6 #"()))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"flips"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"flips"
0 0 25 3 1 #"("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"flips"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"flips"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Board"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"white"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 5 #"black"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         589 22           0 0           0 97 0 25 3 1 #"("
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 10 #"apply-move"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Game"
0 0 25 3 1 #" "
0 0 14 3 4 #"Move"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 4 #"Game"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";; applies flips to board"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"apply-move"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 10 #"outflanks?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Game-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 2 #") "
0 0 14 3 1 #"m"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"Game"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"foldl"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" (["
0 0 14 3 3 #"cor"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Coord"
0 0 25 3 4 #"]) ("
0 0 14 3 12 #"board-update"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Game-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 52 #"                                                    "
0 0 14 3 3 #"cor"
0 0 25 29 1 #"\n"
0 0 25 3 53 #"                                                    ("
0 0 14 3 11 #"Move-player"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"Game-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 5 #"flips"
0 0 25 3 2 #" ("
0 0 14 3 10 #"Game-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 2 #") "
0 0 14 3 1 #"m"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 11 #"Move-player"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 26 #"\"apply-move: illegal move\""
0 0 25 3 3 #")))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 56 #"                                                        "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         295 22           0 0           0 48 0 25 3 2 #"  "
0 0 17 3 19 #";;;;; moves.rkt API"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 15 #";; type exports"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"provide"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 10 #"struct-out"
0 0 25 3 1 #" "
0 0 14 3 4 #"Game"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 10 #"struct-out"
0 0 25 3 1 #" "
0 0 14 3 4 #"Move"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 13 #";; operations"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"provide"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 13 #"initial-board"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 9 #"make-game"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 10 #"outflanks?"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 5 #"flips"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 10 #"apply-move"
0 0 25 3 7 #")      "
0 0 25 29 1 #"\n"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
